package service;

import dataaccess.AuthTokenDAO;
import dataaccess.DataAccessException;
import dataaccess.GameDAO;
import model.AuthData;
import model.GameData;

import java.util.List;

public class GameService {
    private final GameDAO gameDAO;
    private final AuthTokenDAO authTokenDAO;

    public GameService() {
        this.gameDAO = new GameDAO();
        this.authTokenDAO = AuthTokenDAO.getInstance();
    }

    public GameService(GameDAO gameDAO, AuthTokenDAO authTokenDAO) {
        this.gameDAO = gameDAO;
        this.authTokenDAO = authTokenDAO;
    }

    public List<GameData> listGames(String authToken) throws DataAccessException {
        // Validate the auth token
        AuthData authData = authTokenDAO.getAuth(authToken);
        if (authData == null) {
            throw new DataAccessException("Error: unauthorized");
        }

        // Retrieve the list of games
        return gameDAO.getAllGames();
    }

    public int createGame(String authToken, String gameName) throws DataAccessException {
        // Validate the auth token
        if (authTokenDAO.getAuth(authToken) == null) {
            throw new DataAccessException("Error: unauthorized");
        }

        // Validate the game name
        if (gameName == null || gameName.isEmpty()) {
            throw new DataAccessException("Error: bad request");
        }

        // Create a new game with a unique game ID
        GameData newGame = new GameData(0, null, null, gameName); // Game ID will be generated by GameDAO
        return gameDAO.insertGame(newGame);
    }
}